### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Date custom scalar type"""
scalar DateScalar

"""The base definition of a relay-style edge"""
interface Edge {
  cursor: String
}

"""Represents a memory of the subject (origin) of grief"""
type Memory implements Node {
  """The body text of the memory"""
  body: String

  """When the memory was created on momento"""
  createdAt: DateScalar

  """When the memory was deleted"""
  deletedAt: DateScalar
  id: String

  """The story attached to the memory"""
  story: String

  """The title of the memory"""
  title: String
}

type MemoryEdge implements Edge {
  cursor: String
  node: Memory
}

type MemoryResponse {
  edges: [MemoryEdge]
  pageInfo: PageInfo
}

type Mutation {
  createMemory(body: String!, story: String!, title: String!): Memory!
  createUser(email: String!, firstName: String!, lastName: String!): User
  deleteUser(id: String!): User
  editMemory(body: String!, id: String!, story: String!, title: String!): Memory!
  editUser(email: String!, firstName: String!, id: String!, lastName: String!): User
}

"""The GUID of the node"""
interface Node {
  id: String
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Query {
  """A single memory"""
  memory(id: String!): Memory
  memoryConnection(after: String, first: Int!): MemoryResponse

  """A single user"""
  user(id: String!): User
  userConnection(after: String, first: Int!): UserResponse

  """A single user"""
  users(id: String!): User
}

type User implements Node {
  email: String
  firstName: String
  id: String
  lastName: String
}

type UserEdge implements Edge {
  cursor: String
  node: User
}

type UserResponse {
  edges: [UserEdge]
  pageInfo: PageInfo
}