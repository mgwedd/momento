/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./api/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateScalar";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateScalar";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateScalar: any
}

export interface NexusGenObjects {
  Edge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['Memory'] | null; // Memory
  }
  Memory: { // root type
    archivedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    body?: string | null; // String
    createdAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    editorId?: string | null; // String
    id?: string | null; // String
    imageUrl?: string | null; // String
    isPublished?: boolean | null; // Boolean
    lastEditedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    memoryOriginatedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    publishedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    reflectionId?: string | null; // String
    story?: string | null; // String
    title?: string | null; // String
    userId?: string | null; // String
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage?: boolean | null; // Boolean
  }
  Query: {};
  Response: { // root type
    edges?: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Edge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['Memory'] | null; // Memory
  }
  Memory: { // field return type
    archivedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    body: string | null; // String
    createdAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    editorId: string | null; // String
    id: string | null; // String
    imageUrl: string | null; // String
    isPublished: boolean | null; // Boolean
    lastEditedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    memoryOriginatedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    publishedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    reflectionId: string | null; // String
    story: string | null; // String
    title: string | null; // String
    userId: string | null; // String
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean | null; // Boolean
  }
  Query: { // field return type
    memories: NexusGenRootTypes['Response'] | null; // Response
  }
  Response: { // field return type
    edges: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
}

export interface NexusGenFieldTypeNames {
  Edge: { // field return type name
    cursor: 'String'
    node: 'Memory'
  }
  Memory: { // field return type name
    archivedAt: 'DateScalar'
    body: 'String'
    createdAt: 'DateScalar'
    deletedAt: 'DateScalar'
    editorId: 'String'
    id: 'String'
    imageUrl: 'String'
    isPublished: 'Boolean'
    lastEditedAt: 'DateScalar'
    memoryOriginatedAt: 'DateScalar'
    publishedAt: 'DateScalar'
    reflectionId: 'String'
    story: 'String'
    title: 'String'
    userId: 'String'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
  }
  Query: { // field return type name
    memories: 'Response'
  }
  Response: { // field return type name
    edges: 'Edge'
    pageInfo: 'PageInfo'
  }
}

export interface NexusGenArgTypes {
  Query: {
    memories: { // args
      after?: string | null; // String
      first?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}