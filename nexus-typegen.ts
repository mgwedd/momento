/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./api/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateScalar";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateScalar";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateScalar: any
}

export interface NexusGenObjects {
  Edge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['User'] | null; // User
  }
  Memory: { // root type
    body?: string | null; // String
    createdAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    id?: string | null; // String
    story?: string | null; // String
    title?: string | null; // String
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage?: boolean | null; // Boolean
  }
  Query: {};
  Reflection: { // root type
    createdAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt?: NexusGenScalars['DateScalar'] | null; // DateScalar
    id?: string | null; // String
    prompt?: string | null; // String
  }
  Response: { // root type
    edges?: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  User: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // String
    lastName?: string | null; // String
  }
}

export interface NexusGenInterfaces {
  Node: NexusGenRootTypes['Memory'] | NexusGenRootTypes['Reflection'] | NexusGenRootTypes['User'];
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Edge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['User'] | null; // User
  }
  Memory: { // field return type
    body: string | null; // String
    createdAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    id: string | null; // String
    story: string | null; // String
    title: string | null; // String
  }
  Mutation: { // field return type
    createUser: NexusGenRootTypes['User'] | null; // User
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean | null; // Boolean
  }
  Query: { // field return type
    memory: NexusGenRootTypes['Memory'] | null; // Memory
    user: NexusGenRootTypes['User'] | null; // User
    userConnection: NexusGenRootTypes['Response'] | null; // Response
  }
  Reflection: { // field return type
    createdAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    deletedAt: NexusGenScalars['DateScalar'] | null; // DateScalar
    id: string | null; // String
    prompt: string | null; // String
  }
  Response: { // field return type
    edges: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  User: { // field return type
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // String
    lastName: string | null; // String
  }
  Node: { // field return type
    id: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Edge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  Memory: { // field return type name
    body: 'String'
    createdAt: 'DateScalar'
    deletedAt: 'DateScalar'
    id: 'String'
    story: 'String'
    title: 'String'
  }
  Mutation: { // field return type name
    createUser: 'User'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
  }
  Query: { // field return type name
    memory: 'Memory'
    user: 'User'
    userConnection: 'Response'
  }
  Reflection: { // field return type name
    createdAt: 'DateScalar'
    deletedAt: 'DateScalar'
    id: 'String'
    prompt: 'String'
  }
  Response: { // field return type name
    edges: 'Edge'
    pageInfo: 'PageInfo'
  }
  User: { // field return type name
    email: 'String'
    firstName: 'String'
    id: 'String'
    lastName: 'String'
  }
  Node: { // field return type name
    id: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createUser: { // args
      email: string; // String!
      firstName: string; // String!
      lastName: string; // String!
    }
  }
  Query: {
    memory: { // args
      id: string; // String!
    }
    user: { // args
      id: string; // String!
    }
    userConnection: { // args
      after?: string | null; // String
      first: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  Node: "Memory" | "Reflection" | "User"
}

export interface NexusGenTypeInterfaces {
  Memory: "Node"
  Reflection: "Node"
  User: "Node"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Node";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}