/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateScalar";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateScalar";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateScalar: any
}

export interface NexusGenObjects {
  Memory: { // root type
    archived_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    body?: string | null; // String
    created_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    deleted_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    id?: number | null; // Int
    last_edited_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    last_editor_id?: string | null; // String
    memory_originated_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    published?: boolean | null; // Boolean
    published_at?: NexusGenScalars['DateScalar'] | null; // DateScalar
    reflection_id?: string | null; // String
    story?: string | null; // String
    title?: string | null; // String
    user_id?: string | null; // String
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Memory: { // field return type
    archived_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    body: string | null; // String
    created_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    deleted_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    id: number | null; // Int
    last_edited_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    last_editor_id: string | null; // String
    memory_originated_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    published: boolean | null; // Boolean
    published_at: NexusGenScalars['DateScalar'] | null; // DateScalar
    reflection_id: string | null; // String
    story: string | null; // String
    title: string | null; // String
    user_id: string | null; // String
  }
  Query: { // field return type
    drafts: Array<NexusGenRootTypes['Memory'] | null>; // [Memory]!
  }
}

export interface NexusGenFieldTypeNames {
  Memory: { // field return type name
    archived_at: 'DateScalar'
    body: 'String'
    created_at: 'DateScalar'
    deleted_at: 'DateScalar'
    id: 'Int'
    last_edited_at: 'DateScalar'
    last_editor_id: 'String'
    memory_originated_at: 'DateScalar'
    published: 'Boolean'
    published_at: 'DateScalar'
    reflection_id: 'String'
    story: 'String'
    title: 'String'
    user_id: 'String'
  }
  Query: { // field return type name
    drafts: 'Memory'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}